"use strict";(self.webpackChunknuxulutest=self.webpackChunknuxulutest||[]).push([[7911],{68075:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(74848),r=a(28453);const o={date:"2023-12-25",title:"Create parameters, manipulate query for SSRS type query",categories:["X++","SSRS"],tags:["ssrs"],authors:"max"},s=void 0,i={id:"development/business-docs/ssrs/2023-12-25-Create-parameters,-manipulate-query-for-SSRS-type-query/index",title:"Create parameters, manipulate query for SSRS type query",description:"Normally, we don't do any coding with SSRS query based report. This code below will show you how to create parms and manipulate the query for SSRS query based report.",source:"@site/docs/03-development/02-business-docs/01-ssrs/2023-12-25-Create-parameters,-manipulate-query-for-SSRS-type-query/index.md",sourceDirName:"03-development/02-business-docs/01-ssrs/2023-12-25-Create-parameters,-manipulate-query-for-SSRS-type-query",slug:"/development/business-docs/ssrs/2023-12-25-Create-parameters,-manipulate-query-for-SSRS-type-query/",permalink:"/docs/development/business-docs/ssrs/2023-12-25-Create-parameters,-manipulate-query-for-SSRS-type-query/",draft:!1,unlisted:!1,tags:[{inline:!0,label:"ssrs",permalink:"/docs/tags/ssrs"}],version:"current",lastUpdatedBy:"Dynamics365",lastUpdatedAt:1703891721e3,frontMatter:{date:"2023-12-25",title:"Create parameters, manipulate query for SSRS type query",categories:["X++","SSRS"],tags:["ssrs"],authors:"max"},sidebar:"tutorialSidebar",previous:{title:"How to remove SSRS reports in FinOps Cloud-Hosted",permalink:"/docs/development/business-docs/ssrs/2022-10-20-how-to-remove-ssrs-reports-in-d365/"},next:{title:"Electronic reporting (ER) overview",permalink:"/docs/development/business-docs/ger/"}},l={},c=[];function p(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Normally, we don't do any coding with ",(0,n.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dynamicsax-2012/appuser-itpro/how-to-use-a-query-in-a-report",children:"SSRS query based report"}),". This code below will show you how to create parms and manipulate the query for SSRS query based report."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="DEV_SSRSGlobal_Contract"',children:"[\n    DataContract,\n    SysOperationGroup('GroupId', \"Group label\", '1'),\n    SrsReportName('DEV_Tax1099.Report'),\n    SysOperationContractProcessing(classStr(DEV_SSRSGlobal_UIBuilder),\n    SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)\n]\npublic class DEV_SSRSGlobal_Contract extends SrsReportRdlDataContract implements SysOperationValidatable\n{\n    ExchangeRateTypeName  exchangeRateTypeName;\n    CompanyBankAccount    companyBankAccount;\n    NoYesId               useCurrentDate;\n    FromDate              fromDate;\n    ToDate                toDate;\n    \n    [\n        DataMemberAttribute(identifierStr(ExchangeRateTypeName)),\n        SysOperationDisplayOrderAttribute('1')\n    ]\n    public ExchangeRateTypeName parmExchangeRateTypeName(ExchangeRateTypeName _exchangeRateTypeName = exchangeRateTypeName)\n    {\n        exchangeRateTypeName = _exchangeRateTypeName;\n        return exchangeRateTypeName;\n    }\n\n    [\n        DataMemberAttribute(identifierStr(CompanyBankAccount)),\n        SysOperationDisplayOrderAttribute('2')\n    ]\n    public CompanyBankAccount parmBankAccount(CompanyBankAccount _companyBankAccount = companyBankAccount)\n    {\n        companyBankAccount = _companyBankAccount;\n        return companyBankAccount;\n    }\n\n    [\n        DataMemberAttribute(identifierStr(UseCurrentDate)),\n        SysOperationLabelAttribute(literalstr(\"Use current date\")),\n        SysOperationHelpTextAttribute(literalstr(\"Help text\")),\n        SysOperationDisplayOrderAttribute('3')\n    ]\n    public NoYesId parmUseCurrentDate(NoYesId _useCurrentDate = useCurrentDate)\n    {\n        useCurrentDate = _useCurrentDate;\n        return useCurrentDate;\n    }\n\n    [\n        DataMemberAttribute(identifierStr(FromDate)),\n        SysOperationLabelAttribute(literalstr(\"From date label\")),\n        SysOperationHelpTextAttribute(literalstr(\"Help text\")),\n        SysOperationGroupMemberAttribute('GroupId'),\n        SysOperationDisplayOrderAttribute('1')\n    ]\n    public FromDate parmFromDate(FromDate _fromDate = fromDate)\n    {\n        fromDate = _fromDate;\n        return fromDate;\n    }\n\n    [\n        DataMemberAttribute(identifierStr(ToDate)),\n        SysOperationLabelAttribute(literalstr(\"To date label\")),\n        SysOperationHelpTextAttribute(literalstr(\"Help text\")),\n        SysOperationGroupMemberAttribute('GroupId'),\n        SysOperationDisplayOrderAttribute('2')\n    ]\n    public ToDate parmToDate(ToDate _toDate = toDate)\n    {\n        toDate = _toDate;\n        return toDate;\n    }\n\n    public boolean validate()\n    {\n        boolean ret = true;\n        \n        if (!exchangeRateTypeName)\n        {\n            ret = checkFailed(\"exchangeRateTypeName should be specified\");\n        }\n        if (!companyBankAccount)\n        {\n            ret = checkFailed(\"companyBankAccount should be specified\");\n        }\n        return ret;\n    }\n\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"Using UIBuilder class, we can control the parm behaviour and set default value."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="SysOperationAutomaticUIBuilder"',children:'[\n    SysOperationContractProcessing(classstr(DEV_SSRSGlobal_Contract),\n    SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)\n]\ninternal final class DEV_SSRSGlobal_UIBuilder extends SysOperationAutomaticUIBuilder\n{\n    private DialogField dialogBankID, dialogExrateType, dialogfromdate, dialogtodate;\n\n    /// <summary>\n    ///     Builds the dialog for the <c></c> SSRS report.\n    /// </summary>\n    protected DialogField addDialogField(IdentifierName _methodName, Object _dataContract = this.dataContractObject())\n    {\n        DialogField ret;\n        DEV_SSRSGlobal_Contract dataContract = this.dataContractObject() as DEV_SSRSGlobal_Contract;\n        \n        switch (_methodName)\n        {\n            case methodStr(DEV_SSRSGlobal_Contract, parmExchangeRateTypeName):\n                dialogExrateType = this.dialog().addFieldValue(extendedTypeStr(ExchangeRateTypeName), dataContract.parmExchangeRateTypeName(), "Currency Exchange Rate Type");\n\t\t\t\t// highlight-next-line\n                dialogExrateType.allowEdit(NoYes::No);\n                ret = dialogExrateType;\n                break;\n            case methodStr(DEV_SSRSGlobal_Contract, parmBankAccount):\n                dialogBankID = this.dialog().addFieldValue(extendedTypeStr(CompanyBankAccount), dataContract.parmBankAccount(),"Bank Account");\n                ret = dialogBankID;\n                break;\n            case methodStr(DEV_SSRSGlobal_Contract, parmFromDate):\n                dialogfromdate = this.dialog().addFieldValue(extendedTypeStr(TransDate), dataContract.parmFromDate(), "From Date");\n                ret = dialogfromdate;\n                break;\n            case methodStr(DEV_SSRSGlobal_Contract, parmToDate):\n                dialogtodate = this.dialog().addFieldValue(extendedTypeStr(TransDate), dataContract.parmToDate(),"To Date");\n                ret = dialogtodate;\n                break;\n        }\n        return ret;\n    }\n\n    /// <summary>\n    ///    Transfers data from the dialog into the data contract object.\n    /// </summary>\n    public void getFromDialog()\n    {\n        super();\n        DEV_SSRSGlobal_Contract contract = this.dataContractObject();\n        contract.parmExchangeRateTypeName(dialogExrateType.value());\n        contract.parmBankAccount(dialogBankID.value());\n        contract.parmFromDate(dialogfromdate.value());\n        contract.parmToDate(dialogtodate.value());\n    }\n\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["We can manipulate the query using ",(0,n.jsx)(t.code,{children:"preRunModifyContract"})," method in Controller class."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="DEV_SSRSGlobal_Controller"',children:"internal final class DEV_SSRSGlobal_Controller extends SrsReportRunController\n{\n    #define.ReportName('DEV_Tax1099.Report')\n    #define.parmYear('Year')\n    /// <summary>\n    ///    Override this method to change the report contract before running the report.\n    /// </summary>\n\t// highlight-next-line\n    protected void preRunModifyContract()\n    {\n        Query                   query;\n        Map                     queryContracts;\n        MapEnumerator           mapEnum;\n        str                     queryKey;\n\n        DEV_SSRSGlobal_Contract contract = this.parmReportContract().parmRdlContract() as DEV_SSRSGlobal_Contract;\n        //Year year = contract.getValue(#parmYear);\n        //date fromDate = mkDate(Tax1099Constants::FirstDay, Tax1099Constants::FirstMonth, year);\n        //date toDate = mkDate(Tax1099Constants::LastDay, Tax1099Constants::LastMonth, year);\n\n        date fromdate = contract.parmFromDate();\n        date toDate = contract.parmToDate();\n\n        queryContracts = this.parmReportContract().parmQueryContracts();\n        if(queryContracts)\n        {\n            mapEnum = queryContracts.getEnumerator();\n            while(mapEnum.moveNext())\n            {\n                queryKey = mapEnum.currentKey();\n                query = queryContracts.lookup(queryKey);\n                SysQuery::findOrCreateRange(query.dataSourceTable(tableNum(VendSettlementTax1099)), \n                    fieldNum(VendSettlementTax1099, TransDate)).value(queryRange(fromDate, toDate));\n            }\n        }\n        super();\n    }\n\n    public static void main(Args _args)\n    {\n        DEV_SSRSGlobal_Controller controller = new DEV_SSRSGlobal_Controller();\n        controller.parmReportName(#ReportName);\n        controller.parmArgs(_args);\n        controller.startOperation();\n    }\n\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>i});var n=a(96540);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);