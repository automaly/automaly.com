"use strict";(self.webpackChunkautomaly_com=self.webpackChunkautomaly_com||[]).push([[1477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/12/20/index","metadata":{"permalink":"/blog/2023/12/20/index","source":"@site/blog/2023-12-20/index.md","title":"How to hide New and Delete buttons (command buttons) in form","description":"We can change the form design property Show Delete Button, Show New Button  to No.","date":"2022-12-21T00:00:00.000Z","formattedDate":"December 21, 2022","tags":[{"label":"New button","permalink":"/blog/tags/new-button"},{"label":"Delete button","permalink":"/blog/tags/delete-button"}],"readingTime":0.21,"hasTruncateMarker":false,"authors":[{"name":"Max Nguyen","title":"FinOps Ranger","url":"/about","imageURL":"https://github.com/Dynamics365.png","key":"max"}],"frontMatter":{"date":"2022-12-21","title":"How to hide New and Delete buttons (command buttons) in form","categories":["X++","Form"],"tags":["New button","Delete button"],"authors":"max"},"unlisted":false,"nextItem":{"title":"How to get FinOps Azure storage blob connection string","permalink":"/blog/2022/10/27/how-to-get-d365-azure-blob-storage-str"}},"content":"We can change the form design property `Show Delete Button`, `Show New Button`  to `No`.\\r\\n\\r\\n![Alt text](image.png)\\r\\n\\r\\nOr using X++ code in form\'s init method\\r\\n\\r\\n```cs\\r\\n[Form]\\r\\npublic class DEV_TestForm extends FormRun\\r\\n{\\r\\n    public void init()\\r\\n    {\\r\\n        this.form().design().showNewButton(0);\\r\\n        this.form().design().showDeleteButton(0);\\r\\n        super();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nFor COC Extension\\r\\n\\r\\n```cs\\r\\n[ExtensionOf(formStr(SMAServiceOrderTable))]\\r\\nfinal class SMAServiceOrderTable_Form_DEV_Extension\\r\\n{\\r\\n    public void init()\\r\\n    {\\r\\n        this.form().design().showNewButton(0);\\r\\n        this.form().design().showDeleteButton(0);\\r\\n        next init();\\r\\n    }\\r\\n}\\r\\n```"},{"id":"/2022/10/27/how-to-get-d365-azure-blob-storage-str","metadata":{"permalink":"/blog/2022/10/27/how-to-get-d365-azure-blob-storage-str","source":"@site/blog/2022-10-27-how-to-get-d365-azure-blob-storage-str/index.md","title":"How to get FinOps Azure storage blob connection string","description":"In Dynamics 365 for Finance and Operations Azure storage is used to","date":"2022-10-27T00:00:00.000Z","formattedDate":"October 27, 2022","tags":[{"label":"Azure storage connection string","permalink":"/blog/tags/azure-storage-connection-string"}],"readingTime":0.5366666666666666,"hasTruncateMarker":false,"authors":[{"name":"Max Nguyen","title":"FinOps Ranger","url":"/about","imageURL":"https://github.com/Dynamics365.png","key":"max"}],"frontMatter":{"date":"2022-10-27","title":"How to get FinOps Azure storage blob connection string","categories":["Integration","Azure"],"tags":["Azure storage connection string"],"authors":"max"},"unlisted":false,"prevItem":{"title":"How to hide New and Delete buttons (command buttons) in form","permalink":"/blog/2023/12/20/index"},"nextItem":{"title":"How to skip standard code in Dynamics 365 finance and operations","permalink":"/blog/2020/04/09/How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations"}},"content":"In Dynamics 365 for Finance and Operations Azure storage is used to \\r\\n\\r\\n* Store files for [Attachments](https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/organization-administration/configure-document-management)\\r\\n* [Data import and export jobs](https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/data-import-export-job)\\r\\n*  When FinOps prints a report via [Document Reporting Services](https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/analytics/document-reporting-services?context=%2Fdynamics365%2Fcontext%2Fcommerce), SSRS Reporting Services generates an [EMF image](https://ax.docentric.com/printing-reports-with-custom-fonts-in-dynamics-365-for-finance-and-operations/) for each page of the generated document. FinOps then temporarily saves the generated EMF files to Azure Blob storage.\\r\\n*  [Printing archive](https://learn.microsoft.com/en-us/dynamicsax-2012/appuser-itpro/print-a-report-from-the-archive)\\r\\n\\r\\nAnd more!\\r\\n\\r\\nIf you are using tier 1 Cloud-Hosted environment, you can find the azure storage from the Azure resource group in Azure portal.\\r\\n\\r\\nFor tier 1, UAT tier 2, and PROD Tier 3, you can create a runnable class and execute to get the Azure storage connection string.\\r\\n\\r\\n```cs\\r\\nusing Microsoft.Dynamics.Clx.ServicesWrapper;\\r\\nclass GetAzureBlob\\r\\n{\\r\\n    public static void main(Args _args)\\r\\n    {\\r\\n        info(\'AzureStorageConnectionString = \' + CloudInfrastructure::GetCsuStorageConnectionString());\\r\\n        info(\'ClientCertificateThumbprint = \' + CloudInfrastructure::GetCsuClientCertificateThumbprint());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nOnce you have the connection string, you can connect it to [MS Azure Storage Explorer](https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?tabs=windows), Power Automate, or consuming in any framwork/language for integration/backup purposes."},{"id":"/2020/04/09/How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations","metadata":{"permalink":"/blog/2020/04/09/How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations","source":"@site/blog/2020-04-09-How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations/index.md","title":"How to skip standard code in Dynamics 365 finance and operations","description":"Disclaimers: Try at your own risk, this is consider as a bug and it will be fixed soon.","date":"2020-04-09T00:00:00.000Z","formattedDate":"April 9, 2020","tags":[{"label":"Chain of Command","permalink":"/blog/tags/chain-of-command"},{"label":"Dynamics 365 finance and operations","permalink":"/blog/tags/dynamics-365-finance-and-operations"},{"label":"skip standard code","permalink":"/blog/tags/skip-standard-code"}],"readingTime":1.7133333333333334,"hasTruncateMarker":false,"authors":[{"name":"Max Nguyen","title":"FinOps Ranger","url":"/about","imageURL":"https://github.com/Dynamics365.png","key":"max"}],"frontMatter":{"date":"2020-04-09T00:00:00.000Z","title":"How to skip standard code in Dynamics 365 finance and operations","tags":["Chain of Command","Dynamics 365 finance and operations","skip standard code"],"authors":"max","key":"How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations"},"unlisted":false,"prevItem":{"title":"How to get FinOps Azure storage blob connection string","permalink":"/blog/2022/10/27/how-to-get-d365-azure-blob-storage-str"},"nextItem":{"title":"Getting onebox VHD Dynamics 365 finance and operations virtual machine","permalink":"/blog/2020/04/06/getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine"}},"content":":::caution\\r\\nDisclaimers: Try at your own risk, this is consider as a bug and it will be fixed soon.\\r\\n:::\\r\\n\\r\\nAccording to this MS article about Chain Of Command https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/extensibility/method-wrapping-coc#wrapper-methods-must-always-call-next\\r\\n\\r\\n> \\"Wrapper methods must always call next Wrapper methods in an extension class must always call next, so that the next method in the chain and, finally, the original implementation are always called. This restriction helps guarantee that every method in the chain contributes to the result. In the current implementation of this restriction, the call to next must be in the first-level statements in the method body.\\"\\r\\n\\r\\nSo as described in the article, the Chain Of Command in Dynamics 365 finance and operations is used to add the logic before or after a method of a class is invoked and the original method will always be executed due to the compulsory of the next statement.\\r\\nWhen doing some implementations, we found out that there is a tricky way to completely **ignore** the execution of the original method of the class that is extended.\\r\\n\\r\\nPlease see below for more details:\\r\\nFor example, I created a project and add a new runnable class named Alex:\\r\\n\\r\\n```cs\\r\\nclass TestClass\\r\\n{\\r\\n    public static void main(Args _args)\\r\\n    {\\r\\n        throw error (\\"Hello World\\");\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nWhen this class runs, a _Hello World_ info message will be displayed in the FinOps UI. Then I used chain of command to create Alex_Extension class that extends this class and \\"override\\" the main method of the Alex\'s class by putting the next call into another method and never call it like this:\\r\\n\\r\\n```cs\\r\\n[ExtensionOf(classStr(TestClass))]\\r\\nfinal class Alex_Extension\\r\\n{\\r\\n    public static void main(Args _args)\\r\\n    {\\r\\n        //Implement something here\\r\\n        info (\\"Ok\\");\\r\\n        void ignore()\\r\\n        {\\r\\n            next main(_args);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nWhen I run the _AlexExtension_, the original main method of the Alex class will be ignored and only the additional block of code that I wrote in the _AlexExtension_ class will be executed, so only the **OK** info will appear.\\r\\n\\r\\nNow we will try with a sample scenario from D365 Finance and Operation. In **General Ledger** Module, we have **General journals** form\\r\\n\\r\\n![Image](How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations.png)\\r\\n\\r\\nWhen you click the button for **Journal Print**, the menu item will be triggered and point to the controller name: *LedgerJournalController* with *LedgerJournalController* class and the report will be generated.\\r\\n\\r\\nI will use COC to \u201coverride\u201d the main method of *LedgerJournalController* class by applying the method above:\\r\\n\\r\\n```cs\\r\\n[ExtensionOf(classStr(LedgerJournalController))]\\r\\nfinal class Alex_LedgerJournalController_Extension\\r\\n{\\r\\n    public static void main(Args _args)\\r\\n    {\\r\\n        info(\\"ok\\");\\r\\n        void ignore_first()\\r\\n        {\\r\\n            next main(_args);\\r\\n        }\\r\\n    }\\r\\n} \u2003\\r\\n```\\r\\n\\r\\nUsing this I will ignore the the main method of *LedgerJournalController* class and instead of generate the report, the result will be only the **OK** info line in the extension class:\\r\\n\\r\\n![Image](How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations-1.png)\\r\\n\\r\\nThis is a little bit tricky because we still call next in our extension class as per the requirement of COC, but as we never call the method that \\"wrap\\" the next call so it will not be executed. You can try this to simply ignore or rewrite a method of a class in FinOps.\\r\\n\\r\\nThank you for reading."},{"id":"/2020/04/06/getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine","metadata":{"permalink":"/blog/2020/04/06/getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine","source":"@site/blog/2020-04-06-getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine/index.md","title":"Getting onebox VHD Dynamics 365 finance and operations virtual machine","description":"1. Download Dynamics 365 finance and operations VHD files","date":"2020-04-06T00:00:00.000Z","formattedDate":"April 6, 2020","tags":[{"label":"onebox vhd","permalink":"/blog/tags/onebox-vhd"},{"label":"Dynamics 365 finance and operations","permalink":"/blog/tags/dynamics-365-finance-and-operations"},{"label":"upgrade","permalink":"/blog/tags/upgrade"},{"label":"LCS","permalink":"/blog/tags/lcs"},{"label":"OneBox","permalink":"/blog/tags/one-box"}],"readingTime":3.9033333333333333,"hasTruncateMarker":true,"authors":[{"name":"Max Nguyen","title":"FinOps Ranger","url":"/about","imageURL":"https://github.com/Dynamics365.png","key":"max"}],"frontMatter":{"date":"2020-04-06T00:00:00.000Z","lastmod":"2022-10-08","title":"Getting onebox VHD Dynamics 365 finance and operations virtual machine","tags":["onebox vhd","Dynamics 365 finance and operations","upgrade","LCS","OneBox"],"categories":["FinOps","Troubleshooting","Onebox"],"authors":"max"},"unlisted":false,"prevItem":{"title":"How to skip standard code in Dynamics 365 finance and operations","permalink":"/blog/2020/04/09/How-to-ignore-standard-code-in-Dynamics-365-finance-and-operations"},"nextItem":{"title":"Create Purchase Orders - Confirm - Product receipt - Post using X++ in Dynamics 365 Finance & Operations","permalink":"/blog/2020/01/25/create-po-confirm-receipt-post"}},"content":"## 1. Download Dynamics 365 finance and operations VHD files\\r\\n\\r\\n* Go to the LCS main page and select **Shared asset library** or go to Shared Asset Library.\\r\\n\\r\\n* Select the asset type **Downloadable VHD**.\\r\\n\\r\\n* Find the VHD you are looking for based on the desired Finance and Operation version. The VHD is divided into multiple file parts that you need to download. For example, the asset files that start with \\"VHD - 10.0.5\\" are the different files you need in order to install version 10.0.5.\\r\\n\\r\\n* Download all files (parts) associated with the desired VHD to a local folder.\\r\\n\\r\\n* After the download is complete, run the executable file that you downloaded, accept the software license agreement, and choose a file path to extract the VHD to.\\r\\n\\r\\n* This creates a local VHD file that you can use to run a local virtual machine.\\r\\n\\r\\n* Sign in to the VM by using the following credentials:\\r\\n\\r\\n  * User name: **Administrator**\\r\\n  * Password: **pass@word1**\\r\\n\x3c!--truncate--\x3e\\r\\n* Provision the administrator user.\\r\\n\\r\\n:::tip\\r\\nFor security reasons the reply URL setup for AAD was changed, The `Admin user provisioning tool` is deleted from 10.0.24 **cloud hosted** VM. More info here https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/dev-tools/access-instances#frequently-asked-questions.\\r\\n\\r\\nYou still have it in the VHD machine.\\r\\n:::\\r\\n\\r\\n## 2. Extend the Evaluattion license\\r\\n\\r\\n* Run cmd with Admin right.\\r\\n* Run `slmgr -dli` to check the current period status.\\r\\n\\r\\n```cmd\\r\\nName: Windows(R), ServerDatacenterEval edition\\r\\nDescription: Windows(R) Operating System, TIMEBASED_EVAL channel\\r\\nPartial Product Key: H6F8M\\r\\nLicense Status: Licensed\\r\\nTimebased activation expiration: 259199 minute(s) (180 day(s))\\r\\n```\\r\\n\\r\\n* Run `slmgr \u2013rearm` to extend the evaluation period.\\r\\n* Run `slmgr \u2013dlv` to see how many extensions do you have left. You can only extend the license a limited number of times.\\r\\n\\r\\n## 3. Rename VM\\r\\n\\r\\n:::tip Update 2023\\r\\nFrom the VHD 10.0.29 version, the VHD name named with the version of it own, before that the computer name always **MININT-F36S5EH**. So we don\'t have to remane the VM everytime we deploy a new VHD.\\r\\n![VHD 10.0.29](DVHD10029.png \\"VHD 10.0.29\\")\\r\\n:::\\r\\n\\r\\n* Rename and restart the machine before you start development or connect to Azure DevOps.\\r\\n* Update the server name in SQL Server\\r\\n\\r\\n  * The default credential for SQL server is **axdbadmin** and password **AOSWebSite@12**\\r\\n  \\r\\nYou can also see the password (`DataAccess.AxAdminSqlPwd`) in the `C:\\\\AOSService\\\\webroot\\\\web.config`\\r\\n\\r\\nTo decrypt run this command:\\r\\n\\r\\n```\\r\\nC:\\\\AOSService\\\\webroot\\\\bin\\\\Microsoft.Dynamics.AX.Framework.ConfigEncryptor.exe -decrypt C:\\\\AOSService\\\\webroot\\\\web.config\\r\\n```\\r\\n\\r\\nTo encrypt run this command:\\r\\n\\r\\n`C:\\\\AOSService\\\\webroot\\\\bin\\\\Microsoft.Dynamics.AX.Framework.ConfigEncryptor.exe -encrypt C:\\\\AOSService\\\\webroot\\\\web.config`\\r\\n\\r\\nIf you see the error\\r\\n\\r\\n:::danger error\\r\\n   No certificate found for id \'7366E25DC94FA8A400FA0037FFF3BB300D9482D4\'\\r\\n:::\\r\\n\\r\\nPlease follow [this step](#7-for-vhd-that-was-released-for-versions-10024-and-later) first.\\r\\n\\r\\n* Run following query\\r\\n\\r\\n    ```sql\\r\\n    --MININT-57EHFHJ\\r\\n    sp_dropserver [old_name]\\r\\n    sp_addserver [new_name], local\\r\\n    ```\\r\\n\\r\\n\\r\\nIn these commands, be sure to replace old_name with the old name of the server and new_name with the new name. By default, the old name is `MININT-F36S5EH`, but you can run select @@servername to get the old name. Additionally, be sure to restart the SQL Server service after the commands have finished running.\\r\\n\\r\\n\\r\\n* Restart SQL service\\r\\n\\r\\n* Open Reporting Services Configuration Manager for SQL Server 2016, then **Select Database**, select **Change Database**, and use the new server name.\\r\\n\\r\\n### Update financial reporting\\r\\n\\r\\nGo to LCS portal and download a one version package, we will need the scripts from it. Open a Microsoft Windows PowerShell command window as an admin, and run the following command. This command contains the default passwords that might have to be updated. Be sure to replace **new_name** with the new name.\\r\\n\\r\\n```powershell showLineNumbers\\r\\ncd <update folder>\\\\MROneBox\\\\Scripts\\\\Update\\\\ConfigureMRDatabase.ps1 -NewAosDatabaseName AxDB -NewAosDatabaseServerName new_name -NewMRDatabaseName ManagementReporter -NewAxAdminUserPassword AOSWebSite@123 -NewMRAdminUserName MRUser -NewMRAdminUserPassword MRWebSite@123 -NewMRRuntimeUserName MRUSer -NewMRRuntimeUserPassword MRWebSite@123 -NewAxMRRuntimeUserName MRUser -NewAxMRRuntimeUserPassword MRWebSite@123\\r\\n```\\r\\n\\r\\n```js showLineNumbers\\r\\nconsole.log(\'Every repo must come with a mascot.\');\\r\\n```\\r\\n\\r\\n```c# showLineNumbers\\r\\nCustTable custTable = CustTable::find(serviceOrderTable.CustAccount);\\r\\nCSG_CorrigoProUpdate corrigoProUpdate;\\r\\n\\r\\nif((custTable.AccountNum == serviceOrderTable.CustAccount)\\r\\n    && CSG_CorrigoProTable::Exist(custTable.CSGMasterAccount)\\r\\n    && serviceOrderTable.CSGCustomerPO != \'\'\\r\\n    && ((serviceOrderReason.StageId == \'Started\'\\r\\n    || serviceOrderReason.StageId == \'Susp-Other\'\\r\\n    || serviceOrderReason.StageId == \'Susp-Parts\'\\r\\n    || serviceOrderReason.StageId == \'Susp-Sched\'\\r\\n    || serviceOrderReason.StageId == \'Complete\'))\\r\\n    && serviceOrderReason.Description != \'Travel Back\')\\r\\n{\\r\\n    ttsbegin;\\r\\n    corrigoProUpdate.selectForUpdate();\\r\\n    corrigoProUpdate.AccountNum = serviceOrderTable.CustAccount;\\r\\n    corrigoProUpdate.CSGMasterAccount = custTable.CSGMasterAccount;\\r\\n    corrigoProUpdate.ServiceOrderId = serviceOrderReason.ServiceOrderId;\\r\\n    corrigoProUpdate.CustomerPO = serviceOrderTable.CSGCustomerPO;\\r\\n    corrigoProUpdate.ObjectName = #ObjectName;\\r\\n    corrigoProUpdate.StageId = serviceOrderReason.StageId;\\r\\n    corrigoProUpdate.Progress = serviceOrderTable.Progress;\\r\\n    corrigoProUpdate.Technician = HcmWorker::find(serviceOrderTable.WorkerResponsible).name();\\r\\n\\r\\n    //With condition already in the custom method docuRef.Name = \'Tech Notes\'\\r\\n    corrigoProUpdate.Notes = DocuRef::csgFirstonly1Note(\'csg\', 287, serviceOrderTable.RecId, \'Tech Notes\');\\r\\n        \\r\\n    corrigoProUpdate.ServiceDateUtc = serviceOrderTable.ServiceDateTime;\\r\\n    corrigoProUpdate.ActionDateUtc = serviceOrderReason.CSGDateTimeExecuted;\\r\\n    corrigoProUpdate.insert();\\r\\n    ttscommit;\\r\\n}\\r\\n```\\r\\n\\r\\n### Update the Azure Storage Emulator\\r\\n\\r\\n* From the Start menu, open Microsoft Azure Storage Emulator - v4.0, and run the following commands.\\r\\n\\r\\n    ```AzureStorageEmulator.exe start```\\r\\n\\r\\n  > If you got an error **_Port conflict with existing application_**, please check this [post](/operation/troubleshooting/2020-04-05-azure-storage-emulator-port-conflict-with-existing-application).\\r\\n\\r\\n* This command verifies that the emulator is running.\\r\\n\\r\\n    ```AzureStorageEmulator.exe status```\\r\\n\\r\\n* Update the server name\\r\\n\\r\\n    ```AzureStorageEmulator.exe init -server new_name```\\r\\n\\r\\nFor more information about Azure storage emulator please follow https://docs.microsoft.com/en-us/azure/storage/common/storage-use-emulator\\r\\n\\r\\n## 4. Location of packages, source code, and other AOS configurations\\r\\n\\r\\nOn a VM, you can find most of the application configuration by opening the web.config file of AOSWebApplication.\\r\\n\\r\\n1. Start IIS.\\r\\n\\r\\n2. Go to _Sites > AOSWebApplication_.\\r\\n\\r\\n3. Right-click, and then click **Explore** to open File Explorer.\\r\\n\\r\\n4. Open the **web.config** file in Notepad or another text editor. The following keys are of interest to many developers and administrators:\\r\\n\\r\\n    * **Aos.MetadataDirectory** \u2013 This key points to the location of the packages folder that contains platform and application binaries, and also source code. (Source code is available only in development environments.) Typical values are: `c:\\\\packages`, `c:\\\\AosServicePackagesLocalDirectory`, and `J:AosServicePackagesLocalDirectory`.\\r\\n\\r\\n    * **DataAccess.Database** \u2013 This key holds the name of the database.\\r\\n\\r\\n    * **Aos.AppRoot** \u2013 This key points to the root folder of the Application Object Server (AOS) web application.\\r\\n\\r\\n## 5. Redeploying or restarting the runtime on the VM\\r\\n\\r\\nTo restart the local runtime and redeploy all the packages, follow these steps.\\r\\n\\r\\n1. Open File Explorer, and go to `C:\\\\CustomerServiceUnit`.\\r\\n\\r\\n2. Right-click **AOSDeploy.cmd**, and then click **Run as administrator**.\\r\\n\\r\\nThis process might take a while. The process is completed when the cmd.exe window closes. If you just want to restart AOS (without redeploying the runtime), run iisreset from an administrator Command Prompt window, or restart AOSWebApplication from IIS.\\r\\n\\r\\n## 6. Update to the latest version\\r\\n\\r\\nPlease check this [document](https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/deployment/install-deployable-package) for versions 10.0.24\\r\\n\\r\\n## 7. For (VHD) that was released for versions 10.0.24 and later\\r\\n\\r\\n### 7.1 Register a new application in Azure Active Directory\\r\\n\\r\\nTo register a new application in Microsoft Azure Active Directory (Azure AD), follow the steps outlined in [Register app or web API](https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app). The new app registration should be for a web application, and the following redirect URIs should be added:\\r\\n\\r\\n* `https://usnconeboxax1aos.cloud.onebox.dynamics.com/`\\r\\n* `https://usnconeboxax1aos.cloud.onebox.dynamics.com/oauth/`\\r\\n\\r\\nOnce created, make note of the **Application (client) ID**.\\r\\n\\r\\n### 7.2 Run the setup script\\r\\n\\r\\nAfter you sign in with the **Administrator** account, right-click the desktop shortcut **Generate Self-Signed Certificates**, and select **Run as administrator**. When the script prompts for the application ID, provide the **Application (client) ID** created in Azure Active Directory.\\r\\n\\r\\nWhen the script finishes, the environment is ready for use. At this time, you can run the Admin Provisioning tool to set the administrator account, permissions, and tenant. Make sure that the email provided is for the Azure Active Directory tenant in which the application registration was created.\\r\\n\\r\\n:::info Reference\\r\\nhttps://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/migration-upgrade/vso-machine-renaming\\r\\n:::"},{"id":"/2020/01/25/create-po-confirm-receipt-post","metadata":{"permalink":"/blog/2020/01/25/create-po-confirm-receipt-post","source":"@site/blog/2020-01-25-create-po-confirm-receipt-post/index.md","title":"Create Purchase Orders - Confirm - Product receipt - Post using X++ in Dynamics 365 Finance & Operations","description":"The script will work for Dynamics 365 Finance & Operations version","date":"2020-01-25T00:00:00.000Z","formattedDate":"January 25, 2020","tags":[{"label":"Create Purchase order X++","permalink":"/blog/tags/create-purchase-order-x"},{"label":"Coding","permalink":"/blog/tags/coding"},{"label":"integration","permalink":"/blog/tags/integration"}],"readingTime":1.25,"hasTruncateMarker":false,"authors":[{"name":"Max Nguyen","title":"FinOps Ranger","url":"/about","imageURL":"https://github.com/Dynamics365.png","key":"max"}],"frontMatter":{"date":"2020-01-25T00:00:00.000Z","title":"Create Purchase Orders - Confirm - Product receipt - Post using X++ in Dynamics 365 Finance & Operations","tags":["Create Purchase order X++","Coding","integration"],"categories":["FinOps","XPP","Integration"],"authors":"max"},"unlisted":false,"prevItem":{"title":"Getting onebox VHD Dynamics 365 finance and operations virtual machine","permalink":"/blog/2020/04/06/getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine"}},"content":"> The script will work for Dynamics 365 Finance & Operations version\\r\\n\\r\\n```cs\\r\\nclass MaxGeneratePO\\r\\n{\\r\\n    public static void main(Args _args)\\r\\n    {\\r\\n        int i = 0; // number of purchase orders\\r\\n        NumberSeq numberSeq;\\r\\n        PurchTable purchTable;\\r\\n        PurchLine purchLine;\\r\\n        InventDim inventDim;\\r\\n\\r\\n        while (i <= 3)\\r\\n        {\\r\\n            ttsBegin;\\r\\n            MaxGeneratePO createPO = new MaxGeneratePO();\\r\\n            numberSeq = NumberSeq::newGetNum(PurchParameters::numRefPurchId());\\r\\n            numberSeq.used();\\r\\n            purchTable.PurchId = numberSeq.num();\\r\\n            purchTable.initValue();\\r\\n            purchTable.initFromVendTable(VendTable::find(\'US-101\'));\\r\\n\\r\\n            if (!purchTable.validateWrite())\\r\\n            {\\r\\n                throw Exception::Error;\\r\\n            }\\r\\n\\r\\n            purchTable.insert();\\r\\n            inventDim.clear();\\r\\n            purchLine.clear();\\r\\n            purchLine.initValue();\\r\\n\\r\\n            purchLine.PurchId = purchTable.PurchId;\\r\\n            purchLine.ItemId = \'D0002\';\\r\\n            inventDim.InventSiteId = \\"1\\";\\r\\n            inventDim.InventLocationId = \\"11\\";\\r\\n            purchLine.InventDimId=InventDim::findOrCreate(inventDim).inventDimId ;\\r\\n            purchLine.createLine(true, true, true, true, true, true);\\r\\n\\r\\n            purchLine.PurchQty = 5;\\r\\n            purchLine.PurchUnit = \\"ea\\";\\r\\n            purchLine.PurchPrice = createPO.randomAmount(); // get random amount nubmer\\r\\n            purchLine.LineAmount = purchLine.calcLineAmount();\\r\\n            purchLine.update();\\r\\n            \\r\\n            //PO confirm\\r\\n            PurchFormLetter purchFormLetter;\\r\\n            PurchFormLetter purchFormLetterPack;\\r\\n            purchFormLetter = PurchFormLetter::construct(DocumentStatus::PurchaseOrder);\\r\\n            purchFormLetter.update(purchTable,\\r\\n                                strFmt(\\"ConNum_%1\\", purchTable.PurchId),\\r\\n                                systemDateGet(),\\r\\n                                PurchUpdate::All,\\r\\n                                AccountOrder::None,\\r\\n                                NoYes::No,\\r\\n                                NoYes::no);\\r\\n            //Product receipt\\r\\n            createPO.proceed(purchTable.PurchId, purchLine.ItemId,purchLine.InventDimId,purchLine.PurchQty,strFmt(\\"RptNum_%1\\", purchTable.PurchId));\\r\\n            //Post PO\\r\\n            createPO.postPOInvoice(purchTable.PurchId, strFmt(\\"RptNum_%1\\", purchTable.PurchId));\\r\\n\\r\\n            info(strFmt(\\"Purchase order \'%1\' has been created\\", purchTable.PurchId));\\r\\n            ttsCommit;\\r\\n            i++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public boolean proceed(PurchId _purchId, ItemId _itemId,inventDimId _inventDimId, PurchQty _qty, PackingSlipId _productReceiptNumber)\\r\\n    {\\r\\n        return\\r\\n            this.generateProductReceipt(_purchId, this.addToPurchLineList(_purchId, _itemId, _inventDimId, _qty), _productReceiptNumber);\\r\\n    }\\r\\n\\r\\n    public boolean generateProductReceipt(PurchId _purchId, List _purchLineList, PackingSlipId _productReceiptNumber)\\r\\n    {\\r\\n        boolean ret = true;\\r\\n        PurchFormLetter purchFromLetter;\\r\\n        PurchTable purchTable = PurchTable::find(_purchId);\\r\\n\\r\\n        try\\r\\n        {\\r\\n            ttsbegin;\\r\\n            purchFromLetter = PurchFormLetter::construct(DocumentStatus::PackingSlip);\\r\\n            purchFromLetter.createFromLines(true);\\r\\n            purchFromLetter.parmLineList(_purchLineList.pack());\\r\\n            purchFromLetter.update(purchTable, _productReceiptNumber,\\r\\n                                DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),\\r\\n                                PurchUpdate::All);\\r\\n            ttscommit;\\r\\n        }\\r\\n        catch\\r\\n        {\\r\\n            ret = false;\\r\\n        }\\r\\n        return ret;\\r\\n    }\\r\\n\\r\\n    public List addToPurchLineList(PurchId _purchId, ItemId _itemId,inventDimId _inventDimId, PurchQty _qty)\\r\\n    {\\r\\n        List purchLineList = new List(Types::Record);\\r\\n        PurchLine purchLine = PurchLine::findItemIdInventDimId(_purchId, _itemId, _inventDimId);\\r\\n\\r\\n        if(purchLine && _qty > 0)\\r\\n        {\\r\\n            purchLine.PurchReceivedNow = _qty;\\r\\n            purchline.modifiedField(fieldNum(PurchLine, PurchReceivedNow));\\r\\n            purchLineList.addEnd(purchLine);\\r\\n        }\\r\\n        return purchLineList;\\r\\n    }\\r\\n\\r\\n    public void postPOInvoice(PurchId purchId, PackingSlipId packingSlipId)\\r\\n    {\\r\\n        TmpFrmVirtual               tmpFrmVirtualVend;\\r\\n        PurchFormLetter_Invoice     purchFormLetter;\\r\\n        VendPackingSlipJour         vendPackingSlipJour;\\r\\n        SysQueryRun                 chooseLinesQuery;\\r\\n        SysQueryRun                 chooseLinesPendingInvoiceQuery;\\r\\n        container                   conTmpFrmVirtual;\\r\\n        List                        selectedList    = new List(Types::Record);\\r\\n\\r\\n        select firstonly vendPackingSlipJour\\r\\n                    where vendPackingSlipJour.PurchId == purchId\\r\\n            && vendPackingSlipJour.PackingSlipId == packingSlipId;\\r\\n\\r\\n        if (vendPackingSlipJour)\\r\\n        {\\r\\n            tmpFrmVirtualVend.clear();\\r\\n            tmpFrmVirtualVend.TableNum  = vendPackingSlipJour.TableId;\\r\\n            tmpFrmVirtualVend.RecordNo  = vendPackingSlipJour.RecId;\\r\\n            tmpFrmVirtualVend.NoYes     = NoYes::Yes;\\r\\n            tmpFrmVirtualVend.Id        = vendPackingSlipJour.PurchId;\\r\\n            tmpFrmVirtualVend.insert();\\r\\n        }\\r\\n\\r\\n        chooseLinesQuery = new SysQueryRun(queryStr(PurchUpdate));\\r\\n        chooseLinesQuery.query().addDataSource(tableNum(VendInvoiceInfoTable)).enabled(false);\\r\\n\\r\\n        // chooseLinesPendingInvoiceQuery needs to be initialized, although it will not be used\\r\\n        chooseLinesPendingInvoiceQuery = new SysQueryRun(queryStr(PurchUpdatePendingInvoice));\\r\\n        chooseLinesPendingInvoiceQuery.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,PurchId)).value(queryValue(\'\'));\\r\\n           \\r\\n        purchFormLetter = PurchFormLetter::construct(DocumentStatus::Invoice);\\r\\n        purchFormLetter.chooseLinesQuery (chooseLinesQuery);\\r\\n        purchFormLetter.parmQueryChooseLinesPendingInvoice(chooseLinesPendingInvoiceQuery);\\r\\n        purchFormLetter.purchTable (PurchTable::find(PurchId));\\r\\n        purchFormLetter.transDate (systemDateGet());\\r\\n        purchFormLetter.parmParmTableNum (strFmt(\\"%1\\",packingSlipId)); //This is invoice number\\r\\n        purchFormLetter.printFormLetter (NoYes::No);\\r\\n        purchFormLetter.sumBy (AccountOrder::Auto);\\r\\n        purchFormLetter.specQty (PurchUpdate::PackingSlip);\\r\\n      \\r\\n        while select tmpFrmVirtualVend\\r\\n        {\\r\\n            selectedList.addEnd(tmpFrmVirtualVend);\\r\\n            conTmpFrmVirtual = selectedList.pack();\\r\\n        }\\r\\n        purchFormLetter.selectFromJournal(conTmpFrmVirtual);\\r\\n        purchFormLetter.reArrangeNow(true);\\r\\n        purchFormLetter.run();\\r\\n    }\\r\\n\\r\\n    public int randomAmount()\\r\\n    {\\r\\n        RandomGenerate randomGenerate;\\r\\n        randomGenerate = RandomGenerate::construct();\\r\\n        randomGenerate.parmSeed(new Random().nextInt());\\r\\n        return RandomGenerate.randomInt(100, 800);\\r\\n    }\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\nThank you for reading."}]}')}}]);