"use strict";(self.webpackChunknuxulutest=self.webpackChunknuxulutest||[]).push([[1536],{74121:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=t(74848),i=t(28453);const o={title:"Link Type and Join Types in ax 2012",date:new Date("2016-01-07T00:00:00.000Z"),categories:["AX2012"],tags:["linktype","jointype"]},r=void 0,c={id:"development/aot/2016-01-07-link-type-and-join-types-in-ax-2012/index",title:"Link Type and Join Types in ax 2012",description:"Link Type",source:"@site/docs/03-development/03-aot/2016-01-07-link-type-and-join-types-in-ax-2012/index.md",sourceDirName:"03-development/03-aot/2016-01-07-link-type-and-join-types-in-ax-2012",slug:"/development/aot/2016-01-07-link-type-and-join-types-in-ax-2012/",permalink:"/docs/development/aot/2016-01-07-link-type-and-join-types-in-ax-2012/",draft:!1,unlisted:!1,tags:[{inline:!0,label:"linktype",permalink:"/docs/tags/linktype"},{inline:!0,label:"jointype",permalink:"/docs/tags/jointype"}],version:"current",lastUpdatedBy:"Luan Nguyen",lastUpdatedAt:1701636614e3,frontMatter:{title:"Link Type and Join Types in ax 2012",date:"2016-01-07T00:00:00.000Z",categories:["AX2012"],tags:["linktype","jointype"]},sidebar:"tutorialSidebar",previous:{title:"AOT",permalink:"/docs/category/aot"},next:{title:"The Type system of Dynamics AX 2012",permalink:"/docs/development/aot/2016-11-25-the-type-system-of-dynamics-ax-2012/"}},a={},d=[{value:"Link Type",id:"link-type",level:2},{value:"Join Types",id:"join-types",level:2}];function l(e){const n={code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"link-type",children:"Link Type"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Active"}),":\n",(0,s.jsx)(n.code,{children:"Parent and child"})," data source is updated immediately when a new record in the parent data source is selected. Continuous updates consume lots of resources consuming."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Delayed"}),":\n",(0,s.jsx)(n.code,{children:"Parent and child"})," A pause is inserted before linked child data sources are updated. This enables faster navigation in the parent data source because the records from child data sources are not updated immediately."]}),"\n",(0,s.jsx)(n.p,{children:"For example, you can scroll a list of orders where you do not want to review the lines associated with the order until you stop scrolling."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Passive"}),": ",(0,s.jsx)(n.code,{children:"Parent and child"})," Linked child data sources are not updated automatically. Updates of the child data source must be programmed on the ",(0,s.jsx)(n.code,{children:"active()"})," method of the master data source."]}),"\n",(0,s.jsx)(n.h2,{id:"join-types",children:"Join Types"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"InnerJoin"})," ",(0,s.jsx)(n.code,{children:"Combined data source"})," select the record from the main table that matches records in the joined table and vice versa."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"//X++\nselect AccountNum from custTable\n    join TaxGroupId from custGroup\n    where custGroup.CustGroup == custTable.CustGroup;\n//CROSS JOIN in T-SQL:\nSELECT T1.ACCOUNTNUM, T1.RECID, T2.TAXGROUPID, T2.RECID\nFROM CUSTTABLE T1 CROSS JOIN CUSTGROUP T2\nWHERE ((T1.PARTITION=?) AND (T1.DATAAREAID=?))\n  AND (((T2.PARTITION=?) AND (T2.DATAAREAID=?)) \n   AND (T2.CUSTGROUP=T1.CUSTGROUP))\n"})}),"\n",(0,s.jsx)(n.p,{children:"There is one record for each match. Records without related records in the other data source are eliminated from the result."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Outer Join"}),": ",(0,s.jsx)(n.code,{children:"Combined data source"})," select the records from the main table. The records are retrieved whether they have matching records in the joined table"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"//X++:\nselect AccountNum from custTable\n    outer join AccountID from custBankAccount\n    where custBankAccount.CustAccount == custTable.AccountNum;\n//LEFT OUTER JOIN in T-SQL:\nSELECT T1.ACCOUNTNUM, T1.RECID, T2.ACCOUNTID, T2.RECID\nFROM CUSTTABLE T1 LEFT OUTER JOIN CUSTBANKACCOUNT T2\nON (((T2.PARTITION=?) AND (T2.DATAAREAID=?))\nAND (T1.ACCOUNTNUM=T2.CUSTACCOUNT))\nWHERE ((T1.PARTITION=?) AND (T1.DATAAREAID=?))\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Exist Join"}),": ",(0,s.jsx)(n.code,{children:"Combined data source"}),"The data source retrieves a record from the main table for each matching record in the joined table."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"//X++:\nselect AccountNum from custBankAccount\n    exists join custTable\n    where custBankAccount.CustAccount == custTable.AccountNum;\n//EXISTS (SELECT 'x'...) in T-SQL:\nSELECT T1.ACCOUNTNUM, T1.RECID\nFROM CUSTBANKACCOUNT T1\nWHERE ((T1.PARTITION=?) AND (T1.DATAAREAID=?))\nAND EXISTS (SELECT 'x'\n            FROM CUSTTABLE T2\n            WHERE (((T2.PARTITION=?) AND (T2.DATAAREAID=?))\n              AND  (T1.CUSTACCOUNT=T2.ACCOUNTNUM)))\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The differences between ",(0,s.jsx)(n.code,{children:"InnerJoin"})," and ",(0,s.jsx)(n.code,{children:"ExistJoin"})," are as follows:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["When the join type is ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"ExistJoin"})}),", the search ends after the first match has been found."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["When the join type is ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"InnerJoin"})}),", all matching records are searched for."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"NotExistJoin"})}),": ",(0,s.jsx)(n.code,{children:"Combined data source"})," Select records from the main table that do not have a match in the joined table."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);