"use strict";(self.webpackChunkautomaly_com=self.webpackChunkautomaly_com||[]).push([[932],{91326:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=n(85893),s=n(11151);const r={title:"Simple summary Keys are in Dynamics AX",description:"Simple summary Keys are in Dynamics AX",date:new Date("2017-01-03T00:00:00.000Z"),categories:["AX2012"],tags:["key"]},i=void 0,l={id:"development/aot/2017-01-03-summary-key/index",title:"Simple summary Keys are in Dynamics AX",description:"Simple summary Keys are in Dynamics AX",source:"@site/docs/03-development/03-aot/2017-01-03-summary-key/index.md",sourceDirName:"03-development/03-aot/2017-01-03-summary-key",slug:"/development/aot/2017-01-03-summary-key/",permalink:"/automaly.com/development/aot/2017-01-03-summary-key/",draft:!1,unlisted:!1,tags:[{label:"key",permalink:"/automaly.com/tags/key"}],version:"current",frontMatter:{title:"Simple summary Keys are in Dynamics AX",description:"Simple summary Keys are in Dynamics AX",date:"2017-01-03T00:00:00.000Z",categories:["AX2012"],tags:["key"]},sidebar:"tutorialSidebar",previous:{title:"Simple summary Keys are in Dynamics AX",permalink:"/automaly.com/development/aot/2017-01-02-Simple-summary-Keys-are-in-Dynamics-AX/"},next:{title:"Basic C# OOP Concept",permalink:"/automaly.com/development/aot/2017-04-10-OOPs_Concept/"}},o={},c=[];function m(e){const a={code:"code",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:["There is a maximum of one ",(0,t.jsx)(a.code,{children:"Primary Key"})," per table, whereas a table can have several ",(0,t.jsx)(a.code,{children:"alternate keys"}),". The ",(0,t.jsx)(a.code,{children:"primary key"})," is usually the type of key that other tables, called child tables, refer to when a ",(0,t.jsx)(a.code,{children:"foreign key"})," field in those other tables need a relational identifier."]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:["For new tables the default is a ",(0,t.jsx)(a.code,{children:"primary key"})," based on the ",(0,t.jsx)(a.code,{children:"RecId"})," field , incremented number or a completely meaningless number that is generated by the system ",(0,t.jsx)(a.code,{children:"surrogate key"}),". ",(0,t.jsx)(a.code,{children:"A surrogate key"})," is a system-generated value that acts as the primary key of a table. This value is typically used instead of a set of fields called the natural key which would typically act as the primary key of a table. Microsoft Dynamics AX 2012 uses Recld as the ",(0,t.jsx)(a.code,{children:"surrogate key"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"Alternate key"})," can be chosen as the ",(0,t.jsx)(a.code,{children:"Replacement Key"})," of a table that can display on forms instead of a meaningless numeric ",(0,t.jsx)(a.code,{children:"primary key"})," value. Each table can have a maximum of one ",(0,t.jsx)(a.code,{children:"replacement key"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"Natural key"})," has meaning to people. Most ",(0,t.jsx)(a.code,{children:"replacement keys"})," are ",(0,t.jsx)(a.code,{children:"natural keys"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:["Relations represents a ",(0,t.jsx)(a.code,{children:"foreign key"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(a.p,{children:"Thank you for reading!"})]})}function d(e={}){const{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},11151:(e,a,n)=>{n.d(a,{Z:()=>l,a:()=>i});var t=n(67294);const s={},r=t.createContext(s);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);