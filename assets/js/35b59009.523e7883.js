"use strict";(self.webpackChunknuxulutest=self.webpackChunknuxulutest||[]).push([[922],{25817:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>a,toc:()=>i});var r=n(74848),o=n(28453);const c={title:"Execute external database Stored Procedure from X++ code using ODBC connectivity",description:"Execute external database Stored Procedure from X++ code using ODBC connectivity",date:new Date("2015-05-13T00:00:00.000Z"),categories:["AX2012"],tags:["xpp","stored procedure"]},s=void 0,a={id:"development/xpp-sample/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/index",title:"Execute external database Stored Procedure from X++ code using ODBC connectivity",description:"Execute external database Stored Procedure from X++ code using ODBC connectivity",source:"@site/docs/03-development/01-xpp-sample/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/index.md",sourceDirName:"03-development/01-xpp-sample/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity",slug:"/development/xpp-sample/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/",permalink:"/docs/development/xpp-sample/2015-05-13-execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/",draft:!1,unlisted:!1,tags:[{inline:!0,label:"xpp",permalink:"/docs/tags/xpp"},{inline:!0,label:"stored procedure",permalink:"/docs/tags/stored-procedure"}],version:"current",lastUpdatedBy:"Luan Nguyen",lastUpdatedAt:1701636614e3,frontMatter:{title:"Execute external database Stored Procedure from X++ code using ODBC connectivity",description:"Execute external database Stored Procedure from X++ code using ODBC connectivity",date:"2015-05-13T00:00:00.000Z",categories:["AX2012"],tags:["xpp","stored procedure"]},sidebar:"tutorialSidebar",previous:{title:"Execute Stored Procedure from X++ code",permalink:"/docs/development/xpp-sample/2015-05-12-execute-stored-procedure-from-x-code/"},next:{title:"List Page Interaction Class",permalink:"/docs/development/xpp-sample/2015-06-09-list-page-interaction-class/"}},d={},i=[];function u(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["This is to show a method to execute external database stored procedures from X++ code. Create a job in AOT with following code. Follow the steps as explained here in the code like replace ",(0,r.jsx)(t.code,{children:"Server Name"}),", ",(0,r.jsx)(t.code,{children:"Database name"})," , ",(0,r.jsx)(t.code,{children:"Stored Procedure name"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The below code is executed through ",(0,r.jsx)(t.code,{children:"the ODBC Connection"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-C#",children:'\nstatic void execExternalDatabase(Args _args)\n{\n    LoginProperty loginProperty;\n    ODBCConnection odbcConnection;\n    Statement statement;\n    ResultSet resultSet;\n   \n\tResultSetMetaData resultSetMetaData;\n    Counter counter;\n    str sql;\n    SqlStatementExecutePermission perm;\n    ;\n \n   \n    loginProperty = new LoginProperty();\n    loginProperty.setServer("SERVERNAME Here"); // Replace your Database Server Name here\n    loginProperty.setDatabase("DemoDB"); //Replace your Database name here\n    odbcConnection = new ODBCConnection(loginProperty); // setting odbc connection here.\n \n    // ODBC Connection to create statement\n    statement = odbcConnection.createStatement();\n \n    // Replace the StoredProcedure you want to execute.\n    sql = strfmt(\'EXEC[myStoredProcedureName]\');\n \n    // Set code access permission to Execute\n    perm = new SqlStatementExecutePermission(sql);\n    perm.assert();\n \n    try\n    {\n        // if Stored Procedure has Select query use executeQuery method.\n       \n        resultSet = statement.executeQuery(sql);\n        resultSet.next();\n       \n        resultSetMetaData = resultSet.getMetaData();\n        for (counter = 1; counter <= resultSetMetaData.getColumnCount(); counter++)\n        {\n            switch(resultSetMetaData.getColumnType(counter))\n            {\n                case 0,1 :\n                    info(resultSet.getString(counter));\n                break;\n                case 3:\n                    info(date2StrUsr(resultSet.getdate(counter)));\n                break;\n            }\n        }\n    }\n    catch (exception::Error)\n    {\n        print "An error occured in the query.";\n        pause;\n    }\n    // Code access permission scope ends here.\n    CodeAccessPermission::revertAssert();\n}\n\n'})}),"\n",(0,r.jsx)(t.p,{children:"Used a simple select query in the stored procedure and the result will be displayed on the infolog."})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(96540);const o={},c=r.createContext(o);function s(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);