"use strict";(self.webpackChunkautomaly_com=self.webpackChunkautomaly_com||[]).push([[3425],{23685:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var o=r(85893),i=r(11151);const t={title:"Modify Microsoft Dynamics AX 2012 R3 SSRS configurations using PowerShell",date:new Date("2015-07-02T00:00:00.000Z"),categories:["AX 2012","Report"],tag:["powershell","SSRS report"]},s=void 0,a={id:"ax2012-archive/ax2012-architecture/2015-07-02-modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations/index",title:"Modify Microsoft Dynamics AX 2012 R3 SSRS configurations using PowerShell",description:"reportManagerWebConfig.ps1",source:"@site/docs/07-ax2012-archive/01-ax2012-architecture/2015-07-02-modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations/index.md",sourceDirName:"07-ax2012-archive/01-ax2012-architecture/2015-07-02-modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations",slug:"/ax2012-archive/ax2012-architecture/2015-07-02-modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations/",permalink:"/automaly.com/ax2012-archive/ax2012-architecture/2015-07-02-modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Modify Microsoft Dynamics AX 2012 R3 SSRS configurations using PowerShell",date:"2015-07-02T00:00:00.000Z",categories:["AX 2012","Report"],tag:["powershell","SSRS report"]},sidebar:"tutorialSidebar",previous:{title:"AxBuild.exe for Parallel Compile on AOS",permalink:"/automaly.com/ax2012-archive/ax2012-architecture/2015-07-01-axbuild-exe-for-parallel-compile-on-aos/"},next:{title:"Rename a Database in SQL Server",permalink:"/automaly.com/ax2012-archive/ax2012-architecture/2015-11-03-rename-a-database-in-sql-server/"}},c={},d=[];function m(e){const n={code:"code",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"reportManagerWebConfig.ps1"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:'#Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name\r\nSet-ExecutionPolicy Unrestricted\r\n$webConfig = "C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportManagerWeb.config"\r\n$currentDate = (get-date).tostring("mm_dd_yyyy-hh_mm_s") # month_day_year - hours_mins_seconds\r\n$backup = $webConfig + "_$currentDate"\r\n$doc = new-object System.Xml.XmlDocument\r\n$doc.Load($webConfig)\r\n#save a backup copy\r\n$doc.Save($backup)\r\nWrite-Host "Backup saved as " + $backup\r\n$node = $doc.get_DocumentElement()."system.web".httpRuntime\r\n$attribute = $doc.CreateAttribute("maxRequestLength")\r\n$attribute.set_Value("100000")\r\n$node.SetAttributeNode($attribute )\r\n$doc.Save($webConfig)\r\nWrite-Host "1) Modified the Report Manager Web.config file"\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:" RsReportServer.ps1"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:'#Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name\r\nSet-ExecutionPolicy Unrestricted\r\n\r\n$version = "6.3.0.0"\r\n$webConfig = "C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportServerRsReportServer.config"\r\n$currentDate = (get-date).tostring("mm_dd_yyyy-hh_mm_s") # month_day_year - hours_mins_seconds\r\n$backup = $webConfig +  ".xml" #"_$currentDate"\r\n$doc = new-object System.Xml.XmlDocument\r\n\r\n$doc.Load($webConfig)\r\n\r\n#save a backup copy\r\n$doc.Save($backup)\r\nWrite\r\nWrite-Host  "Backup saved as " + $backup\r\n#remove node "RSWindowsNegotiate" \r\n$node = $doc.documentElement.SelectSingleNode("//Configuration/Authentication/AuthenticationTypes/RSWindowsNegotiate")\r\nif ($node) \r\n{\r\n    \r\n{\r\n    $node.ParentNode.RemoveChild($node)\r\n    Write\r\n    Write-Host  "RSWindowsNegotiate Removed"\r\n}\r\n#Add node "IsRdceEnabled" \r\n$nodeService = $doc.documentElement.SelectSingleNode("//Configuration/Service")\r\n$nodeIsRdceEnabled = $doc.documentElement.SelectSingleNode("//Configuration/Service/IsRdceEnabled")\r\n\r\n\r\n#Set to true if already exists, otherwise create the node\r\nif ($nodeIsRdceEnabled)\r\n{\r\n    \r\n{\r\n    $nodeIsRdceEnabled.InnerXml = "True"\r\n}\r\nelse\r\n{\r\n    if ($nodeService)\r\n    {\r\n        \r\n    {\r\n        $subnodeService = $doc.createElement("IsRdceEnabled")\r\n        \r\n        $subnodeService.InnerXml = "True"\r\n        $nodeService.appendChild($subnodeService)\r\n        Write\r\n        Write-Host  "IsRdceEnabled added"\r\n    }\r\n}\r\n#Find Data\r\n$nodeCodeAxQuery = $doc.documentElement.SelectSingleNode("//Configuration/Extensions/Data/Extension[@Name=\'AXQUERY\']")\r\n\r\n#Add Data Extension\r\nif (-not($nodeCodeAxQuery))\r\n{\r\n    \r\n{\r\n    $nodeData = $doc.documentElement.SelectSingleNode("//Configuration/Extensions/Data")\r\n    \r\n    if ($nodeData) \r\n    {\r\n        \r\n    {\r\n        $nodeData.InnerXml = $nodeData.InnerXml + \r\n        \r\n        "<Extension Name=\'AXQUERY\' Type=\'Microsoft.Dynamics.Framework.Reports.AxQueryConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=" +\r\n\t\t$version +\r\n\t\t", Culture=neutral, PublicKeyToken=31bf3856ad364e35\'/>\r\n      <Extension Name=\'AXDATAMETHOD\' Type=\'Microsoft.Dynamics.Framework.Reports.AxDataMethodConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=" +\r\n\t\t$version +\r\n\t\t", Culture=neutral, PublicKeyToken=31bf3856ad364e35\'/>\r\n      <Extension Name=\'AXREPORTDATAPROVIDER\' Type=\'Microsoft.Dynamics.Framework.Reports.AxReportProviderConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=" +\r\n\t\t$version +\r\n\t\t", Culture=neutral, PublicKeyToken=31bf3856ad364e35\'/>\r\n      <Extension Name=\'AXADOMD\' Type=\'Microsoft.Dynamics.Framework.Reports.AxAdomdConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=" +\r\n\t\t$version +\r\n\t\t", Culture=neutral, PublicKeyToken=31bf3856ad364e35\'/>\r\n      <Extension Name=\'AXENUMDATAPROVIDER\' Type=\'Microsoft.Dynamics.Framework.Reports.EnumProviderConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=" +\r\n\t\t$version +\r\n\t\t", Culture=neutral, PublicKeyToken=31bf3856ad364e35\'/>"\r\n        Write-Host  "Data Extension added"\r\n    }\r\n}\r\n#Find Extensions\r\n$nodeExtensions = $doc.documentElement.SelectSingleNode("//Configuration/Extensions")\r\n$nodeReportDefinitionCustomization = $doc.documentElement.SelectSingleNode("//Configuration/Extensions/ReportDefinitionCustomization")\r\n\r\nif (-not($nodeReportDefinitionCustomization))\r\n{\r\n    \r\n{\r\n    #Add ReportDefinitionCustomization\r\n    if ($nodeExtensions) \r\n    {\r\n        \r\n    {\r\n        $subnodeExt = $doc.createElement("ReportDefinitionCustomization")\r\n        \r\n        $subnodeExt.InnerXml = "<Extension Name=\'AXRDCE\' Type=\'Microsoft.Dynamics.Framework.Reports.AxRdce.CustomizationExtension,Microsoft.Dynamics.Framework.ReportsExtensions, Version=" +\r\n\t\t$version +\r\n\t\t", Culture=neutral, PublicKeyToken=31bf3856ad364e35\'/>"\r\n        $nodeExtensions.appendChild($subnodeExt)\r\n        Write\r\n        Write-Host  "ReportDefinitionCustomization added"\r\n    }\r\n}\r\nelse\r\n{\r\n    $nodeAXRDCE= $doc.documentElement.SelectSingleNode("//Configuration/Extensions/ReportDefinitionCustomization/Extension [@Name=\'AXRDCE\']")\r\n    \r\n    if (-not($nodeAXRDCE))\r\n    {\r\n        \r\n    {\r\n        $nodeReportDefinitionCustomization.InnerXml = $nodeReportDefinitionCustomization.InnerXml +\r\n            "<Extension Name=\'AXRDCE\' Type=\'Microsoft.Dynamics.Framework.Reports.AxRdce.CustomizationExtension,Microsoft.Dynamics.Framework.ReportsExtensions, Version=" +\r\n\t\t$version +\r\n\t\t", Culture=neutral, PublicKeyToken=31bf3856ad364e35\'/>"\r\n    }\r\n}\r\n$doc.Save($webConfig)\r\n\r\nWrite\r\nWrite-Host  "2) Modified the Report Server Web.config file"\r\ntext some thing\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"ReportServerRsSrvPolicyConfig.ps1"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:"#Instructions: Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name\r\n# Modify version 6.3.0.0 for Dynamics AX 2012\r\nSet-ExecutionPolicy Unrestricted\r\n$version = \"6.3.0.0\"\r\n$webConfig = \"C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportServerrssrvpolicy.config\"\r\n$currentDate = (get-date).tostring(\"mm_dd_yyyy-hh_mm_s\") # month_day_year - hours_mins_seconds\r\n$backup = $webConfig + \".xml\" #\"_$currentDate\"\r\n$doc = new-object System.Xml.XmlDocument\r\n$doc.Load($webConfig)\r\n#save a backup copy\r\n$doc.Save($backup)\r\nWrite\r\nWrite-Host \"Backup saved as \" + $backup\r\n#Add SecurityClass\r\n$nodeAxSessionPermission = $doc.documentElement.SelectSingleNode(\"//configuration/mscorlib/security/policy/PolicyLevel/SecurityClasses/SecurityClass[@Name='AxSessionPermission']\")\r\nif (-not($nodeAxSessionPermission))\r\n{\r\n{\r\n $nodeSecurityClasses = $doc.documentElement.SelectSingleNode(\"//configuration/mscorlib/security/policy/PolicyLevel/SecurityClasses\")\r\n if ($nodeSecurityClasses)\r\n{\r\n {\r\n $nodeSecurityClass = $doc.createElement(\"SecurityClass\")\r\n $nodeSecurityClass.InnerXml = \"<SecurityClass Name='AxSessionPermission' Description='Microsoft.Dynamics.Framework.Reports.AxSessionPermission, Microsoft.Dynamics.Framework.Reports, Version=\" +\r\n $version +\r\n \", Culture=neutral, PublicKeyToken=31bf3856ad364e35' />\"\r\n $nodeSecurityClasses.appendChild($nodeSecurityClass.FirstChild)\r\nWrite\r\n Write-Host \"SecurityClass added\"\r\n }\r\n}\r\n#Add PermissionSet\r\n$nodeAxSessionPermissionSet = $doc.documentElement.SelectSingleNode(\"//configuration/mscorlib/security/policy/PolicyLevel/NamedPermissionSets/PermissionSet[@class='NamedPermissionSet' and @version='1' and @Name='AxSessionPermissionSet']\")\r\nif (-not($nodeAxSessionPermissionSet))\r\n{\r\n{\r\n $nodeNamedPermissionSets = $doc.documentElement.SelectSingleNode(\"//configuration/mscorlib/security/policy/PolicyLevel/NamedPermissionSets\")\r\n if ($nodeNamedPermissionSets)\r\n{\r\n {\r\n $nodePermissionSet = $doc.createElement(\"PermissionSet\")\r\n $nodePermissionSet.InnerXml = \"<PermissionSet class='NamedPermissionSet' version='1' Name='AxSessionPermissionSet'>\r\n <IPermission class='AxSessionPermission' version='1' Unrestricted='true' />\r\n <IPermission class='SecurityPermission' version='1' Flags='Assertion' />\r\n </PermissionSet>\"\r\n $nodeNamedPermissionSets.appendChild($nodePermissionSet.FirstChild)\r\nWrite\r\n Write-Host \"PermissionSet added\"\r\n }\r\n}\r\n#Add CodeGroup\r\n$nodeAxStrongName = $doc.documentElement.SelectSingleNode(\"//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class='FirstMatchCodeGroup' and @version='1' and @PermissionSetName='Nothing']/CodeGroup[@class='UnionCodeGroup' and @version='1' and @PermissionSetName='FullTrust' and @Name='AX_Reports_Strong_Name']\")\r\nif (-not($nodeAxStrongName))\r\n{\r\n{\r\n $nodeCodeGroup = $doc.documentElement.SelectSingleNode(\"//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class='FirstMatchCodeGroup' and @version='1' and @PermissionSetName='Nothing']\")\r\n if ($nodeCodeGroup)\r\n{\r\n {\r\n $subnodeCodeGroup = $doc.createElement(\"CodeGroup\")\r\n $subnodeCodeGroup.InnerXml = \"<CodeGroup class='UnionCodeGroup' version='1' PermissionSetName='FullTrust' Name='AX_Reports_Strong_Name' Description='This code group grants Dynamics AX Reports code full trust. '>\r\n <IMembershipCondition class='StrongNameMembershipCondition' version='1' PublicKeyBlob='0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9' />\r\n </CodeGroup>\"\r\n $nodeCodeGroup.appendChild($subnodeCodeGroup.FirstChild)\r\nWrite\r\n Write-Host \"CodeGroup added\"\r\n }\r\n}\r\n#Add nodeReportExpressionPermission\r\n#http://blogs.msdn.com/b/axsupport/archive/2012/02/02/microsoft-dynamics-ax-2012-reporting-extensions-error-system-security-permissions-environmentpermission-while-running-report.aspx\r\n$nodeReportExpressionPermission = $doc.documentElement.SelectSingleNode(\"//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class='FirstMatchCodeGroup' and @version='1' and @PermissionSetName='Nothing']/CodeGroup[@class='UnionCodeGroup' and @version='1' and @PermissionSetName='Execution' and @Name='Report_Expressions_Default_Permissions']\")\r\nif ($nodeReportExpressionPermission)\r\n{\r\n{\r\n $attribute = $doc.CreateAttribute(\"PermissionSetName\")\r\n $attribute.set_Value(\"FullTrust\")\r\n $nodeReportExpressionPermission.SetAttributeNode($attribute )\r\n}\r\n}\r\n$doc.Save($webConfig)\r\nWrite\r\nWrite-Host \"3) Modified the Report Server rssrvpolicy.config file\"\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>s});var o=r(67294);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);