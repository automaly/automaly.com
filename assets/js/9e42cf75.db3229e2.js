"use strict";(self.webpackChunkautomaly_com=self.webpackChunkautomaly_com||[]).push([[11],{32164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=t(85893),i=t(11151);const a={title:"Insert, update, Delete order line through AIF In AX 2012 R3",description:"Insert, update, Delete order line through AIF In AX 2012 R3",date:new Date("2016-12-28T00:00:00.000Z"),tags:["AX2012","Integration"],categories:["AX2012","Integration","AIF"],lightgallery:!0,toc:{auto:!0}},o=void 0,c={id:"integration/aif-integration-ax12/2016-12-28-Insert,-update,-Delete-order-line-through-AIF-In-AX-2012-R3/index",title:"Insert, update, Delete order line through AIF In AX 2012 R3",description:"Insert, update, Delete order line through AIF In AX 2012 R3",source:"@site/docs/02-integration/04-aif-integration-ax12/2016-12-28-Insert,-update,-Delete-order-line-through-AIF-In-AX-2012-R3/index.md",sourceDirName:"02-integration/04-aif-integration-ax12/2016-12-28-Insert,-update,-Delete-order-line-through-AIF-In-AX-2012-R3",slug:"/integration/aif-integration-ax12/2016-12-28-Insert,-update,-Delete-order-line-through-AIF-In-AX-2012-R3/",permalink:"/docs/integration/aif-integration-ax12/2016-12-28-Insert,-update,-Delete-order-line-through-AIF-In-AX-2012-R3/",draft:!1,unlisted:!1,tags:[{label:"AX2012",permalink:"/docs/tags/ax-2012"},{label:"Integration",permalink:"/docs/tags/integration"}],version:"current",frontMatter:{title:"Insert, update, Delete order line through AIF In AX 2012 R3",description:"Insert, update, Delete order line through AIF In AX 2012 R3",date:"2016-12-28T00:00:00.000Z",tags:["AX2012","Integration"],categories:["AX2012","Integration","AIF"],lightgallery:!0,toc:{auto:!0}},sidebar:"tutorialSidebar",previous:{title:"CRUD Purchase order using AIF in Dynamics AX 2012 R3",permalink:"/docs/integration/aif-integration-ax12/2016-12-28-CRUD-Purchase-order-using-AIF-in-Dynamics-AX-2012-R3/"},next:{title:"CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3",permalink:"/docs/integration/aif-integration-ax12/2016-12-29-CRUD-Purchase-Requisition-using-AIF-in-Dynamics-AX-2012-R3/"}},d={},s=[];function l(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["In previous ",(0,r.jsx)(n.a,{href:"/2016-12-28-crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/",children:"post"}),", I already show how to create purchase order through AIF with ",(0,r.jsx)(n.code,{children:"NETTCP"})," or ",(0,r.jsx)(n.code,{children:"HTTP adapter"}),". In this post, we will get little deep more about action on line of order."]}),"\n",(0,r.jsxs)(n.p,{children:["The following code sample shows how to ",(0,r.jsx)(n.code,{children:"insert"}),", ",(0,r.jsx)(n.code,{children:"update"}),", ",(0,r.jsx)(n.code,{children:"delete"})," a line of an existing purchase order through AIF, currently I\u2019m using C#.NET console project for demo."]}),"\n",(0,r.jsxs)(n.p,{children:["As Partial update, we must include just the fields to change and any fields required by the document (you can check ",(0,r.jsx)(n.code,{children:"Data policies"})," in AIF Service ports form for that)."]}),"\n",(0,r.jsx)(n.p,{children:"Also, notice how action properties are specified \u2013 no matter we do with the line, which means updating the order."}),"\n",(0,r.jsx)(n.p,{children:"I\u2019m giving you an idea how it looks like, here is the code"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"The first method will handle the key of AIF Service"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-C#",children:'private static EntityKey[] EntityForPurchId(string purchId)\r\n{\r\n\tKeyField field = new KeyField()\r\n\t{\r\n\t\tField = "PurchId",\r\n\t\tValue = purchId\r\n\t};\r\n\r\n\tEntityKey key = new EntityKey()\r\n\t{\r\n\t\tKeyData = new[] { field }\r\n\t};\r\n\r\n\treturn new[] { key };\r\n}\r\n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"create Line, delete Line, update line in Purchase order"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-C#",children:'EntityKey[] entityKeyList = EntityForPurchId("BGR-000054");\r\n\r\nCallContext callContext = new CallContext();\r\ncallContext.Company = "bgr";\r\n\r\nMav_PurchOrderServiceServiceClient client = new Mav_PurchOrderServiceServiceClient();\r\nAxdMav_PurchOrderService purchOrders = client.read(callContext, entityKeyList);\r\n\r\n//Define which line need to be update or delete\r\nvar lastLine = purchOrders.PurchTable[0].PurchLine.Last();\r\n\r\nvar purchLine = new AxdEntity_PurchLine()\r\n{\r\n\tItemId = "110329",\r\n\tPurchQty = 1,\r\n\tCurrencyCode = "KRW",\r\n\tRecIdSpecified      = true,\r\n\tLineNumberSpecified = true,\r\n\taction              = AxdEnum_AxdEntityAction.create,\r\n\tactionSpecified     = true\r\n\r\n\t//for delete\r\n\t//RecId               = lastLine.RecId,\r\n\t//RecIdSpecified      = true,\r\n\t//action              = AxdEnum_AxdEntityAction.delete,\r\n\t//actionSpecified     = true\r\n\r\n\t//for Update\r\n\t//RecId               = lastLine.RecId,\r\n\t//RecIdSpecified      = true,\r\n\t//action              = AxdEnum_AxdEntityAction.update,\r\n\t//actionSpecified     = true\r\n\t\r\n};\r\n\r\nvar purchTable = new AxdEntity_PurchTable()\r\n{\r\n\t_DocumentHash = purchOrders.PurchTable[0]._DocumentHash,\r\n\tOrderAccount = "101-01-75441",\r\n\tLanguageId = "en-us",\r\n\tCurrencyCode = "KRW",\r\n\tPurchName = "AIF PO Test",\r\n\taction = AxdEnum_AxdEntityAction.update,\r\n\tactionSpecified = true,\r\n\tPurchLine = new[] { purchLine }\r\n};\r\n\r\nAxdMav_PurchOrderService purchOrder = new AxdMav_PurchOrderService()\r\n{\r\n\tPurchTable = new AxdEntity_PurchTable[] {purchTable}\r\n};\r\n\r\n\r\nclient.update(callContext, entityKeyList, purchOrder);\r\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"Thank you for reading!"})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>o});var r=t(67294);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);